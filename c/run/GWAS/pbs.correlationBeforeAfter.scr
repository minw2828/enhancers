#!/bin/bash

# Description:
# This script performs meta-analysis by re-engineering BH's zScore.f90 script.
# Min Wang, July 2016

# Requirement:
# You will need to adjust parameters under [program], [input] and [output] to 
# fit your case.

# Execution:
# sh call.make_all_infiles.scr [script_name] [parallel_index]


#PBS -S /bin/bash
#PBS -N correlationBeforeAfter
#PBS -l nodes=1:ppn=1
#PBS -l mem=05G
#PBS -l walltime=01:00:00
#PBS -M min.wang@depi.vic.gov.au
#PBS -m abe
#PBS -A dbioanim1
#PBS -V
#PBS -q batch


#################### parameters ####################
projdate='2016-01-19'
psf='c'
task="GWAS"
tag1='enhancer';  tag2='snp';  tag3='gene'
chrN=14
pSigLevel='10e-08'

#################### Define paths ####################
path_pre='/group/dairy/Min/geno2pheno'
path_analyse="$path_pre/analyses/$projdate/$psf"
path_data="$path_pre/data"
path_software="$path_pre/software"
binpath="$path_analyse/bin/$task"; runpath="$path_analyse/run/$task"; outpath="$path_analyse/out/$task"

#################### program files ####################
prog_file1="correlationBeforeAfter.R"
prog_path1=$binpath

#################### inputs ####################
infile1="snpName_pheno_weighteffect_weight_snpeffectmeta_npops_varmeta_zmeta_pmeta.$chrN.$projdate.$psf.tab" # After 
inpath1="$outpath/metaAnalysis.reengineerBHzScoref90.v2"

infile2="snpName_pheno_weighteffect_weight_snpeffectmeta_npops_varmeta_zmeta_pmeta.$chrN.$projdate.$psf.tab" # Before
inpath2="$path_analyse/out/GSEA/metaAnalysis.reengineerBHzScoref90.v2"

#################### outputs ####################
tmpfile="snpName_pheno_snpeffectmeta_pmeta_correction.$chrN.$projdate.$psf.csv"
NODEDIR=/tmp/$PBS_JOBID

outfile1="corEffect_corPvalue.$chrN.$projdate.$psf.csv"
outfile2="`echo $prog_file1 | sed 's/\.R//g'`.$chrN.$projdate.$psf.png"
outpath1="$outpath/`echo $prog_file1 | sed 's/\.R//g'`"

#################### functions ####################
source $runpath/functions.sh

#################### safe guard ####################
targets=($binpath $runpath $outpath $outpath1)
for i in ${targets[@]}; do make_dir $i; done 

#################### analysis ####################
function getTmpFile {
    remove_file $NODEDIR/$tmpfile
    awk -F'\t' 'BEGIN{OFS=",";} {print $1, $2, $5, $NF, "after"}'  $inpath1/$infile1 >> $NODEDIR/$tmpfile
    awk -F'\t' 'BEGIN{OFS=",";} {print $1, $2, $5, $NF, "before"}' $inpath2/$infile2 >> $NODEDIR/$tmpfile
}

getTmpFile
echo Rscript $prog_path1/$prog_file1 $NODEDIR/$tmpfile $outpath1/$outfile1 $outpath1/$outfile2 

#################### write to *.o* file ####################
echo ""
echo "PBS_JOBNAME:                       $PBS_JOBNAME"
echo "PBS_JOBID:                         $PBS_JOBID"
echo "Temporary directory to create is"  $NODEDIR
echo "Target:                            $outpath1"
echo ""

/usr/local/bin/showJobStats.scr  $PBS_JOBID

exit 0



