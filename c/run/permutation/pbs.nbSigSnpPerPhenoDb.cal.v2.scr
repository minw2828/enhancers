#!/bin/bash

# Description:
# On 14 September 2017, MG, AC, TPH and MW had a skype call to BH. After the 
# meeting, TPH requests MW to perform the permutation test using MG's sliding 
# method, in replacement of the random selection permutation method that was 
# used in the paper.
# Min Wang, 15 September 2017

# Requirement:
# You will need to adjust parameters under [program], [input] and [output] to 
# fit your case.

# Execution:
# sh call.make_all_infiles.scr [script_name] [parallel_index]


#PBS -S /bin/bash
#PBS -N nbSigSnpPerPhenoDb.cal.v2
#PBS -l nodes=1:ppn=1
#PBS -l mem=30G
#PBS -l walltime=10:00:00
#PBS -M min.wang@depi.vic.gov.au
#PBS -m abe
#PBS -A dbioanim1
#PBS -V
#PBS -q batch


#################### parameters ####################
projdate='2016-01-19'
psf='c'
task="permutation"
ver='v2'
oRefseq='bostau6'
pSigLevel="10e-08"
ntimes=10000
pheno='PY'
db='tough'
chr=24

#################### Define paths ####################
path_pre='/group/dairy/Min/geno2pheno'
path_analyse="$path_pre/analyses/$projdate/$psf"
path_data="$path_pre/data"
path_software="$path_pre/software"
binpath="$path_analyse/bin/$task"; runpath="$path_analyse/run/$task"; outpath="$path_analyse/out/$task"

#################### program files ####################
prog_file1="Rscript"
prog_path1="$path_software/R/R-revised/bin"

prog_file2="nbSigSnpPerPhenoDb.cal.$ver.R"
prog_path2=$binpath

#################### inputs ####################
infile1="study_ct_animal_species_SPECIES_iRefseq_refSeq.csv"
inpath1="$path_data/TAD"

infile2="snpName_pheno_weighteffect_weight_snpeffectmeta_npops_varmeta_zmeta_pmeta.$chr.$projdate.$psf.tab"
inpath2="$path_analyse/out/metaAnalysis/reengineerBHzScoref90.v2"

infile3="snpName.$db.$oRefseq.$projdate.a.csv"
inpath3="$path_pre/analyses/$projdate/a/out//TFBS/reduce.bioconductor"

#################### tmpfiles ####################
tmpfile2="chr_start_end_pmeta.$pheno.$db.$chr.$projdate.$psf.tab"
tmpfile3="chr_start_end.$pheno.$db.$chr.$projdate.$psf.tab"
NODEDIR=/tmp/$PBS_JOBID

#################### outputs ####################
outpath1="$outpath/`echo $prog_file2 | awk -F'.' '{print $1}'`"
outpath2="$outpath1/`echo $prog_file2 | awk -F'.' '{print $2}'`"
outpath3="$outpath2/$ver"
outpath4="$outpath3/$pheno"
outpath5="$outpath4/$db"
outpath6="$outpath5/$chr"

outfile1="nbSnp.$pSigLevel.$ntimes.$oRefseq.$projdate.$psf.csv"  

#################### functions ####################
source $runpath/functions.sh

#################### safe guard ####################
targets=($binpath $runpath $outpath $outpath1 $outpath2 $outpath3 $outpath4 $outpath5 $outpath6)
for i in ${targets[@]}; do make_dir $i; done 

#################### analysis ####################
function getTmpfile2 {
    sed 's/^Chr//g' $inpath2/$infile2 | sed 's/:/\t/g' | sed 's/^30,/X,/g' | awk -F'\t' -v p=$pheno -v c=$chr 'BEGIN{OFS="\t"} {if ($1 == c && $3 == p) print $1, $2, $2, $NF}' >> $NODEDIR/$tmpfile2
}

function getTmpfile3 {
    sed 's/^Chr//g' $inpath3/$infile3 | sed 's/:/\t/g' | sed 's/^30,/X,/g' | awk -F'\t' -v c=$chr 'BEGIN{OFS="\t"} {if ($1 == c) print $1, $2, $2}' >> $NODEDIR/$tmpfile3
}

getTmpfile2
getTmpfile3
$prog_path1/$prog_file1 $prog_path2/$prog_file2 $inpath1/$infile1 $NODEDIR/$tmpfile2 $NODEDIR/$tmpfile3 $outpath6/$outfile1

#################### write to *.o* file ####################
echo ""
echo "PBS_JOBNAME:                       $PBS_JOBNAME"
echo "PBS_JOBID:                         $PBS_JOBID"
echo "Temporary directory to create is   $NODEDIR"
echo "Output directory:                  $outpath6"
echo ""

/usr/local/bin/showJobStats.scr  $PBS_JOBID

exit 0



