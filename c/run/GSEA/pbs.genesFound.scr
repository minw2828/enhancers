#!/bin/bash

# Description:
# This script examines genes of interests are found.
# Min Wang, May 2016

# Requirement:
# You will need to adjust parameters under [program], [input] and [output] to 
# fit your case.

# Execution:
# sh [script_name] 


#PBS -S /bin/bash
#PBS -N genesFound
#PBS -l nodes=1:ppn=1
#PBS -l mem=1G
#PBS -l walltime=01:00:00
#PBS -M min.wang@depi.vic.gov.au
#PBS -m abe
#PBS -A dbioanim1
#PBS -V
#PBS -q batch


#################### parameters ####################
projdate='2016-01-19'
psf='c'
task='GSEA'
#distance='1000' # nt
tag1='enhancer'; tag2='snp'; tag3='gene'
folder='GCF_000003055.6_Bos_taurus_UMD_3.1.1'
ntimes=10000
nTrueThreshold=0 
fdr='0.01'

#################### Define paths ####################
path_pre='/group/dairy/Min/geno2pheno'
path_analyse="$path_pre/analyses/$projdate/$psf"
path_data="$path_pre/data"
path_refgen="$path_data/ref_genomes/ftp.ncbi.nlm.nih.gov/genomes/all"
path_software="$path_pre/software"
binpath="$path_analyse/bin/$task"; runpath="$path_analyse/run/$task"; outpath="$path_analyse/out/$task"

#################### program files ####################
prog_file1="genesFound.1.R"
prog_file2="genesFound.py"
prog_file3="genesFound.2.R"
prog_path1=$binpath

#################### inputs ####################
infile1="ncbi.cattleQTLmilk.20160517.tab"
inpath1="$path_data/qtl"

infile2="ncbi.cattleQTL.20160517.tab"
inpath2="$path_data/qtl"

infile3=$task"enriched.gender_pheno_chrN_db.$nTrueThreshold.$fdr.$ntimes.$projdate.$psf.csv"
inpath3="$outpath/enriched"

infile41="Raven2013GSE.table1.50K_snp.bosTau8.tab"
infile42="Raven2014GSE.table1.8058_snp.bosTau8.tab"
infile43="Raven2014GSE.table2.8058_snp.bosTau8.tab"
infile44="Raven2014GSE.table3.8058_snp.bosTau8.tab"
infile45="Raven2016MammGenome.table1.1000BullGenome.bosTau8.tab"
infile46="Raven2016MammGenome.table2.1000BullGenome.bosTau8.tab"
infile47="Kemper2015GSE.table6.800K_snp.bosTau6.tab"
inpath4="$path_data/annotation"

infile5=$folder"_genomic.gff.gz"
inpath5="$path_refgen/$folder"

infile6="NCBI.refgen.infoTable.umd311.tab"
inpath6="$path_data/annotation"

#################### outputs ####################
outfile1=`echo $infile1 | awk -F'.' 'BEGIN{OFS=".";} {print $1, $2, $3}'`".$distance.tab" # 0: not found; 1: found 
outfile2=`echo $infile2 | awk -F'.' 'BEGIN{OFS=".";} {print $1, $2, $3}'`".$distance.tab" # 0: not found; 1: found
outfile3=`echo $inpath4 | awk -F'/' '{print $NF}'`".$distance.tab" # 0: not found; 1: found
outpath1=$outpath/`echo $prog_file1 | awk -F'.' '{print $1}'`
NODEDIR=/tmp/$PBS_JOBID

#################### functions ####################
source $runpath/functions.sh

#################### safe guard ####################
targets=($binpath $runpath $outpath $outpath1)
for i in ${targets[@]}; do make_dir $i; done 

#################### analysis ####################
Rscript $prog_path1/$prog_file1 $inpath2/$infile1 $inpath3/$infile3 $outpath1/$outfile1
Rscript $prog_path1/$prog_file1 $inpath2/$infile2 $inpath3/$infile3 $outpath1/$outfile2

#geneName, chr, geneStart, geneEnd, description, boolFound 
tail -n +2 $inpath4/$infile41 | awk -F'\t' 'BEGIN{OFS="\t";} {print $1, $2, $3, $4}' >> $NODEDIR/combine
tail -n +2 $inpath4/$infile42 | awk -F'\t' 'BEGIN{OFS="\t";} {print $1, $2, $3, $4}' >> $NODEDIR/combine
tail -n +2 $inpath4/$infile43 | awk -F'\t' 'BEGIN{OFS="\t";} {print $1, $2, $3, $4}' >> $NODEDIR/combine
tail -n +2 $inpath4/$infile44 | awk -F'\t' 'BEGIN{OFS="\t";} {print $1, $2, $3, $4}' >> $NODEDIR/combine
tail -n +2 $inpath4/$infile45 | awk -F'\t' '{print $NF}' | sed 's/,/\n/g' | sed 's/[*]$//g' >> $NODEDIR/combine
tail -n +2 $inpath4/$infile46 | awk -F',' '{print $4}' >> $NODEDIR/combine
tail -n +2 $inpath4/$infile47 | awk '{print $NF}' | sed -e 's/[(].*//g' >> $NODEDIR/combine 
cat $NODEDIR/combine | sort -k1 | uniq | sed '/^[.]/d' | awk 'BEGIN{OFS="\t";} {print $1, $2, $3, $4}' > $NODEDIR/combine.unique 

python $prog_path1/$prog_file2 $inpath5/$infile5 $inpath6/$infile6 $NODEDIR/combine.unique $NODEDIR/$outfile3
awk 'BEGIN{OFS="\t";} {print $1, $2, $3, $4, $5}' $NODEDIR/$outfile3 > $NODEDIR/temp

Rscript $prog_path1/$prog_file3 $NODEDIR/temp $inpath3/$infile3 $outpath1/$outfile3 

#################### write to *.o* file ####################
echo ""
echo "PBS_JOBNAME:                       $PBS_JOBNAME"
echo "PBS_JOBID:                         $PBS_JOBID"
echo "Temporary directory to create is"  $NODEDIR
echo "Target:                            $outpath1/$outfile1"
echo "                                   $outpath1/$outfile2"
echo "                                   $outpath1/$outfile3"
echo ""

/usr/local/bin/showJobStats.scr  $PBS_JOBID

exit 0

