#!/bin/bash

# Description:
# Run the same script per file or per record in parallel.
# Min Wang, January 2016

# Requirement:
# You will need to adjust parameters under [program], [input] and [output] to 
# fit your case.

# Execution:
# sh call.enrichment.scr [script_name] [parallel_index]


#################### parameters ####################
projdate='2016-01-19'
psf='d'
task="GWAS"
tag='enhancer'
parallel_index=$2
dbs=("VISTA" "FANTOM5" "dbSUPER" "Villar_2015" "noDB")
genders=('bull' 'cow')
phenos=("FY" "MY" "PY")
breeds=("hol" "jer")
sigThresholds=('10e-05' '10e-08' '10e-20')
distances=(1000000 2000000)

#################### Define paths ####################
path_pre='/group/dairy/Min/geno2pheno'
path_analyse="$path_pre/analyses/$projdate/$psf"
path_data="$path_pre/data"
path_software="$path_pre/software"
binpath="$path_analyse/bin/$task"; runpath="$path_analyse/run/$task"; outpath="$path_analyse/out/$task"

#################### program files ####################
prog_file1=$1
prog_path1=$runpath

#################### inputs ####################
infile1="chroms.txt"
inpath1="$path_software/emmax"

infile2="Raven2014BMC.table4.800K_snp.tab"
inpath2="$path_data/annotation"

#################### analysis ####################
# parallel_index: 1
function db { for c in ${dbs[@]}; do qsub -v db=$c $prog_path1/$prog_file1; done }

# parallel_index: 2
function breed_db { for a in ${breeds[@]}; do for c in ${dbs[@]}; do qsub -v breed=$a,db=$c $prog_path1/$prog_file1; done; done }

# parallel_index: 3
function gender_pheno { for a in ${genders[@]}; do for b in ${phenos[@]}; do qsub -v gender=$a,pheno=$b $prog_path1/$prog_file1; done; done }

# parallel_index: 4
function gender_pheno_db { for a in ${genders[@]}; do for b in ${phenos[@]}; do for c in ${dbs[@]}; do qsub -v gender=$a,pheno=$b,db=$c $prog_path1/$prog_file1; done; done; done }

# parallel_index: 5
function gender_pheno_chrN { for a in ${genders[@]}; do for b in ${phenos[@]}; do for c in `cat $inpath1/$infile1`; do qsub -v gender=$a,pheno=$b,chrN=$c $prog_path1/$prog_file1; done; done; done }

# parallel_index: 6
function gender_pheno_chrN_db { for a in ${genders[@]}; do for b in ${phenos[@]}; do for c in `cat $inpath1/$infile1`; do for d in ${dbs[@]}; do qsub -v gender=$a,pheno=$b,chrN=$c,db=$d $prog_path1/$prog_file1; done; done; done; done }

# parallel_index: 7
function gender_pheno_chrN_zoomIn {
    for a in ${genders[@]}; do
        for b in ${phenos[@]}; do
            for c in `cat $inpath1/$infile1`; do
                genename=`awk $`
#                qsub -v gender=$a,pheno=$b,chrN=$c $prog_path1/$prog_file1
            done
        done
    done
}

# parallel_index: 8
function breed_chrN { for a in ${breeds[@]}; do for c in `cat $inpath1/$infile1`; do qsub -v breed=$a,chrN=$c $prog_path1/$prog_file1; done; done }

# parallel_index: 9
function breed_chrN_db { for a in ${breeds[@]}; do for b in `cat $inpath1/$infile1`; do for c in ${dbs[@]}; do qsub -v breed=$a,chrN=$b,db=$c $prog_path1/$prog_file1; done; done; done }

# parallel_index: 10
function significantThresholds { for a in ${sigThresholds[@]}; do qsub -v sigThreshold=$a $prog_path1/$prog_file1; done }

# parallel_index: 11
function distance_significantThresholds_gender_pheno_chrN { 
    for a in ${distances[@]}; do
        for b in ${sigThresholds[@]}; do 
            for c in ${genders[@]}; do 
                for d in ${phenos[@]}; do 
                    for e in `cat $inpath1/$infile1`; do 
                        qsub -v distance=$a,sigThreshold=$b,gender=$c,pheno=$d,chrN=$e $prog_path1/$prog_file1
                    done
                done
            done
        done
    done 
}

# parallel_index: 12 
function gender_pheno_chrN_pThreshold {
    for a in ${genders[@]}; do
        for b in ${phenos[@]}; do
            for c in `cat $inpath1/$infile1`; do
                for d in ${sigThresholds[@]}; do
                    qsub -v gender=$a,pheno=$b,chrN=$c,sigThreshold=$d $prog_path1/$prog_file1
                done
            done
        done
    done
}

# parallel_index: 13
function gender_pheno_chrN_distance {
    for a in ${genders[@]}; do
        for b in ${phenos[@]}; do
            for c in `cat $inpath1/$infile1`; do
                for d in ${distances[@]}; do
                    qsub -v gender=$a,pheno=$b,chrN=$c,distance=$d $prog_path1/$prog_file1
                done
            done
        done
    done
}



if   [ $parallel_index -eq 1 ]; then db
elif [ $parallel_index -eq 2 ]; then breed_db
elif [ $parallel_index -eq 3 ]; then gender_pheno
elif [ $parallel_index -eq 4 ]; then gender_pheno_db
elif [ $parallel_index -eq 5 ]; then gender_pheno_chrN
elif [ $parallel_index -eq 6 ]; then gender_pheno_chrN_db
elif [ $parallel_index -eq 7 ]; then gender_pheno_chrN_zoomIn
elif [ $parallel_index -eq 8 ]; then breed_chrN
elif [ $parallel_index -eq 9 ]; then breed_chrN_db
elif [ $parallel_index -eq 10 ]; then significantThresholds
elif [ $parallel_index -eq 11 ]; then distance_significantThresholds_gender_pheno_chrN
elif [ $parallel_index -eq 12 ]; then gender_pheno_chrN_pThreshold
elif [ $parallel_index -eq 13 ]; then gender_pheno_chrN_distance
fi


exit 0

